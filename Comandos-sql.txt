SELECT:
-- Seleciona uma determinada coluna da tabela.

	// Seleciona essas colunas.
	SELECT coluna1,coluna2
	FROM tabela; 

	//Seleciona todas as colunas.
	SELECT *
	FROM tabela;

DISTINCT:
-- Omitir dados duplicados, retorna apenas valores distintos.

	// Seleciona valores distintos dessas colunas.
	SELECT DISTINCT coluna1, coluna2
	FROM tabela;
	
WHERE:
-- Especifica uma instrução, adciona um filtro (condição).

	[ OPERADOR   -  DESCRIÇÃO   ]
	[   <>          DIFERENTE DE]

	SELECT coluna1, coluna2
	FROM tabela
	WHERE condicao1 AND condicao2;

COUNT:
-- Contar todas as linhas para determinar o total de linhas da tabela.

	SELECT COUNT(*)
	FROM tabela;

	// Especifica por parametro.
	SELECT COUNT(coluna1)
	FROM tabela;

TOP:
-- Filtras a quantidade de retorno de dados.

	// Seleciona apenas os 10 primeiros resultados.
	SELECT TOP 10 *
	FROM tabela;

ORDER BY:
-- Ordena de acordo com o parametro.

	SELECT coluna1, coluna2
	FROM tabela
	ORDER BY coluna1 asc/desc;

BETWEEN:
-- Usado para encontrar um valor entre o valor minimo e o valor maximo.

	// Pegando resultados da coluna entre 1000 e 15000
	SELECT *
	FROM tabela
	WHERE coluna1 BETWEEN 1000 AND 1500;

	// Pegando resultados da coluna fora da margem de 1000 e 15000
	SELECT *
	FROM tabela
	WHERE coluna1 NOT BETWEEN 1000 AND 1500;

IN:
-- Para verificar se um valor corresponde com qualquer valor passado na lista.

	// Pegando todos os valores vermelho e preto da coluna color.
	SELECT *
	FROM tabela
	WHERE color IN ('red', 'black');

	// Diferente de vermelho e preto.
	SELECT *
	FROM tabela
	WHERE color NOT IN ('red', 'black');

LIKE:
-- Procura o lugar de uma sequência para corresponder a uma sequência de caracter.

	SELECT *
	FROM tabela 
	WHERE valor LIKE 'valo%';

MIN, MAX, SUM and AVG:
-- Funções de agregação que basicamente combinam dados de uma tabela em um resultado.

	// Soma todos os valores dessa coluna.
	SELECT SUM (coluna1) AS "apelido_coluna"
	FROM tabela;

	// Pega o menor valor dessa coluna.
	SELECT MIN (coluna1) AS "apelido_coluna"
	FROM tabela;

	// Pega o maior valor dessa coluna.
	SELECT MAX (coluna1) AS "apelido_coluna"
	FROM tabela;

	// A media da soma dos valores da coluna.
	SELECT AVG (coluna1) AS "apelido_coluna"
	FROM tabela;

GROUP BY:
-- Divide o resultado por grupos (distinct padrão).

	// Completa a função e agrupa todos os itens da coluna1
	SELECT coluna1, funcao(coluna2)
	FROM tabela
	GROUP BY coluna1;

HAVING:
-- Filtrar resultado de agrupamento.

	// Aplicado depois que os dados foram agrupados diferente do 'WHERE'.
	SELECT coluna1, funcao(coluna2)
	FROM tabela
	GROUP BY coluna1
	HAVING condicao;

	//Selecionando as colunas com de 1 a 5.
	SELECT coluna1, COUNT(coluna1)
	FROM tabela
	GROUP BY coluna1
	HAVING COUNT(coluna1) BETWEEN 1 AND 5;

AS:
-- Renomear colunas (dar apelidos)

	SELECT coluna1 AS 'apelido' 
	FROM tabela

LIMIT and OFFSET:
-- 'LIMIT' reduzirá o número de linhas a serem retornadas e o 'OFFSET' opcional especificará 
	de onde começar a contar o número de linhas.

	SELECT * 
	FROM tabela 
	LIMIT 3 OFFSET 3

JOIN:
-- Utilizado para acessar outras tabelas.

-- TABELA REFERENCIA:

	[---------+---------]
	[	A	  |    B    ]
	[id nome  | id nome ]
	[---------+---------]
	[1 Robo   |1 Espada ]
	[2 Macaco |2 Robo   ]
	[3 Samurai|3 Mario  ]
	[4 Monitor|4 Samurai]
	[---------+---------]


INNER JOIN:
-- Seleciona registros que possuem valores correspondentes nas duas tabelas (coluna em comum).

	// Ambos possuem a coluna 'id'.
	SELECT M.coluna1, B.coluna2, B.coluna3
	FROM tabela1 M
	INNER JOIN tabela2 B ON B.id = M.id;

	// Tabela cartesiana, une as duas tabelas.
	SELECT *
	FROM tabelaA
	INNER JOIN tabelaB ON tabelaA.nome = tabelaB.nome;
	
	RETORNO:
	[id nome   |id nome  ]
	[----------+---------]
	[1  Robo   |2 Robo   ]
	[3  Samurai|4 Samurai]

FULL OUTER JOIN:
-- Retorna o conjunto de dados correspondentes da tabelaA e TabelaB.

	SELECT *
	FROM tabelaA
	FULL OUTER JOIN tabelaB ON tabelaA.nome = tabelaB.nome;

	RETORNO:
	[id nome   |id nome  ]
	[----------+---------]
	[1  Robo   |2 Robo   ]
	[2  Macaco |   NULL  ]
	[3  Samurai|4 Samurai]
	[4  Monitor|   NULL  ]
	[   NULL   |1 Espada ]
	[   NULL   |3 Mario  ]

LEFT OUTER JOIN:
-- Retorna o conjunto de dados correspondentes da tabelaA e TabelaB, se não houver dados ele preenche cm Null.

	SELECT *
	FROM tabelaA
	LEFT OUTER JOIN tabelaB ON tabelaA.nome = tabelaB.nome;

	RETORNO:
	[id nome   |id nome  ]
	[----------+---------]
	[1  Robo   |2 Robo   ]
	[2  Macaco |   NULL  ]
	[3  Samurai|4 Samurai]
	[4  Monitor|   NULL  ]

RIGHT OUTER JOIN:
-- Retorna o conjunto de dados correspondentes da TabelaB e tabelaA, se não houver dados ele preenche cm Null.

	SELECT *
	FROM tabelaA
	LEFT OUTER JOIN tabelaB ON tabelaA.nome = tabelaB.nome;

	RETORNO:
	[id nome   |id nome  ]
	[----------+---------]
	[   NULL   |1 Espada ]
	[1 Robo    |2 Robo   ]
	[   NULL   |3 Mario  ]
	[3 Samurai |4 Samurai]



